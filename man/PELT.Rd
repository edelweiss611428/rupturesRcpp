% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PeltR6.R
\docType{class}
\name{PELT}
\alias{PELT}
\title{Pruned Exact Linear Time (PELT)}
\description{
An R6 class implementing the PELT algorithm for offline change point detection.
}
\details{
PELT (Pruned Exact Linear Time) is an efficient algorithm for change point detection
that prunes the search space to achieve optimal segmentation in linear time under certain conditions.

This implementation currently only supports the L2 cost function.
}
\section{Methods}{

\describe{
\item{\code{$new()}}{Initialises a PELT object.}
\item{\code{$describe()}}{Describes a PELT object.}
\item{\code{$fit()}}{Takes a time series matrix as input.}
\item{\code{$predict()}}{Performs PELT given a linear penalty value.}
}
}

\examples{

## ------------------------------------------------
## Method `PELT$new`
## ------------------------------------------------

peltObj = PELT$new(minSize = 1L, jump = 1L, costFunc = "L2")

## ------------------------------------------------
## Method `PELT$describe`
## ------------------------------------------------

peltObj = PELT$new(minSize = 1L, jump = 1L, costFunc = "L2")
peltObj$describe()

## ------------------------------------------------
## Method `PELT$fit`
## ------------------------------------------------

peltObj = PELT$new(minSize = 1L, jump = 1L, costFunc = "L2")
tsMat = as.matrix(c(rnorm(100,0), rnorm(100,5)))
peltObj$fit(tsMat)

## ------------------------------------------------
## Method `PELT$predict`
## ------------------------------------------------

peltObj = PELT$new(minSize = 1L, jump = 1L, costFunc = "L2")
tsMat = as.matrix(c(rnorm(100,0), rnorm(100,5)))
peltObj$fit(tsMat)
peltObj$predict(pen = NULL)
}
\references{
Truong, C., Oudre, L., & Vayatis, N. (2020). Selective review of offline change point detection methods.
Signal Processing, 167, 107299.

Killick, R., Fearnhead, P., & Eckley, I. A. (2012). Optimal detection of change points with a linear computational cost.
Journal of the American Statistical Association, 107(500), 1590-1598.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{minSize}}{An active binding. Sets the internal variable \code{.minSize} but should not be called directly.}

\item{\code{jump}}{An active binding. Sets the internal variable \code{.jump} but should not be called directly.}

\item{\code{costFunc}}{An active binding. Sets the internal variable \code{.costFunc} but should not be called directly.}

\item{\code{tsMat}}{An active binding. Sets the internal variable \code{.tsMat} but should not be called directly.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PELT-new}{\code{PELT$new()}}
\item \href{#method-PELT-describe}{\code{PELT$describe()}}
\item \href{#method-PELT-fit}{\code{PELT$fit()}}
\item \href{#method-PELT-predict}{\code{PELT$predict()}}
\item \href{#method-PELT-clone}{\code{PELT$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-new"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-new}{}}}
\subsection{Method \code{new()}}{
Initialises a PELT object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$new(minSize, jump, costFunc)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{minSize}}{An integer specifying the minimum segment size. By default, minSize = 1L.}

\item{\code{jump}}{An integer k defining the search grid - only candidate change points in \{1,k+1,2k+1,...\}
will be considered. By default, jump = 1L.}

\item{\code{costFunc}}{A string specifying a cost function. Currently, only "L2" is supported.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns NULL. Creates a PELT object with params minSize, jump, and costFunc.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{peltObj = PELT$new(minSize = 1L, jump = 1L, costFunc = "L2")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-describe"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-describe}{}}}
\subsection{Method \code{describe()}}{
Describes a PELT object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$describe()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns a list containing the following fields of the PELT object:
\describe{
\item{\code{minSize}}{The minimum segment size.}
\item{\code{jump}}{The integer k defining the search grid \{1,k+1,2k+1,...\}.}
\item{\code{costFunc}}{The cost function.}
\item{\code{fitted}}{A boolean indicating whether or not $fit() has been run.}
\item{\code{tsMat}}{The input time series matrix.}
\item{\code{n}}{The number of observations in tsMat.}
\item{\code{p}}{The number of features in tsMat.}
}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{peltObj = PELT$new(minSize = 1L, jump = 1L, costFunc = "L2")
peltObj$describe()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-fit"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-fit}{}}}
\subsection{Method \code{fit()}}{
Takes a time series matrix as input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$fit(tsMat)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tsMat}}{tsMat A time series matrix of size \eqn{n \times p}whose rows are observations ordered in time.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns NULL. Initialises .tsMat, .n, and .p, and sets private$.fitted to TRUE,
enabling the use of $predict().
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{peltObj = PELT$new(minSize = 1L, jump = 1L, costFunc = "L2")
tsMat = as.matrix(c(rnorm(100,0), rnorm(100,5)))
peltObj$fit(tsMat)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-predict"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-predict}{}}}
\subsection{Method \code{predict()}}{
Performs PELT given a linear penalty value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$predict(pen = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pen}}{A single non-negative numeric value specifying a penalty for each additional change point. By default,
pen = NULL, which forces pen = log(n).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of indexes corresponding to the end point of each regime. By design, the last element
of the vector is the number of observations.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{peltObj = PELT$new(minSize = 1L, jump = 1L, costFunc = "L2")
tsMat = as.matrix(c(rnorm(100,0), rnorm(100,5)))
peltObj$fit(tsMat)
peltObj$predict(pen = NULL)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
