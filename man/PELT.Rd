% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PeltR6.R
\docType{class}
\name{PELT}
\alias{PELT}
\title{Pruned Exact Linear Time (PELT)}
\description{
An R6 class implementing the PELT algorithm for offline change point detection.
}
\details{
PELT (Pruned Exact Linear Time) is an efficient algorithm for change point detection
that prunes the search space to achieve optimal segmentation in linear time under certain conditions.

Currently supports the following cost functions:
\itemize{
\item \code{"L2"}: for (independent) piecewise Gaussian process with \strong{constant variance}
\item \code{"SIGMA"}: for (independent) piecewise Gaussian process with \strong{varying variance}
\item \code{"VAR"}: for piecewise Gaussian vector-regressive process with \strong{constant variance}
}

\code{PELT} requires  a \code{costFunc} object, which can be created via \code{createCostFunc()}.

See \strong{Methods} section for more details.
}
\section{Methods}{

\describe{
\item{\code{$new()}}{Initialises a \code{PELT} object.}
\item{\code{$describe()}}{Describes the \code{PELT} object.}
\item{\code{$fit()}}{Takes a time series matrix as input.}
\item{\code{$predict()}}{Performs PELT given a linear penalty value.}
\item{\code{$plot()}}{Plots change point segmentation in ggplot style.}
\item{\code{$clone()}}{Clones the \code{PELT} object.}
}
}

\examples{

# 2-regime simulated data example
set.seed(1)
tsMat = cbind(c(rnorm(100,0), rnorm(100,5,5)),
              c(rnorm(100,0), rnorm(100,5,5)))
# Create a `"SIGMA` cost object.
SIGMAObj = createCostFunc(costFunc = "SIGMA")
# Initialise a `PELT` object
PELTObj = PELT$new(minSize = 1L, jump = 1L, costFuncObj = SIGMAObj)
# Input the time series matrix
PELTObj$fit(tsMat)
# Describe the `PELT` object
PELTObj$describe()
# Perform PELT with `pen = 100`
PELTObj$predict(pen = 100)
# Plot the segmentation results
PELTObj$plot(d = 1:2, main = "method: PELT; costFunc: SIGMA; pen: 100")

}
\references{
Truong, C., Oudre, L., & Vayatis, N. (2020). Selective review of offline change point detection methods.
Signal Processing, 167, 107299.

Killick, R., Fearnhead, P., & Eckley, I. A. (2012). Optimal detection of change points with a linear computational cost.
Journal of the American Statistical Association, 107(500), 1590-1598.
}
\author{
Minh Long Nguyen \email{edelweiss611428@gmail.com}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{minSize}}{Active binding. Sets the internal variable \code{.minSize} but should not be called directly.}

\item{\code{jump}}{Active binding. Sets the internal variable \code{.jump} but should not be called directly.}

\item{\code{costFuncObj}}{Active binding. Sets the internal variable \code{.costFuncObj} but should not be called directly.}

\item{\code{tsMat}}{Active binding. Sets the internal variable \code{.tsMat} but should not be called directly.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PELT-new}{\code{PELT$new()}}
\item \href{#method-PELT-describe}{\code{PELT$describe()}}
\item \href{#method-PELT-fit}{\code{PELT$fit()}}
\item \href{#method-PELT-predict}{\code{PELT$predict()}}
\item \href{#method-PELT-plot}{\code{PELT$plot()}}
\item \href{#method-PELT-clone}{\code{PELT$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-new"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-new}{}}}
\subsection{Method \code{new()}}{
Initialises a \code{PELT} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$new(minSize, jump, costFuncObj)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{minSize}}{Integer. Minimum allowed segment length. Default: \code{1L}.}

\item{\code{jump}}{Integer. Search grid step size: only positions in \{1, k+1, 2k+1, ...\} are considered. Default: \code{1L}.}

\item{\code{costFuncObj}}{List of class \code{costFunc}. Created via \code{costFuncObj()} function. Default, \code{costFuncObj("L2")}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{NULL}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-describe"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-describe}{}}}
\subsection{Method \code{describe()}}{
Describes a \code{PELT} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$describe()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns a list containing some of the following fields:
\describe{
\item{\code{minSize}}{Minimum allowed segment length.}
\item{\code{jump}}{Search grid step size.}
\item{\code{costFuncObj}}{The \code{costFunc} object.}
\item{\code{fitted}}{Whether or not \verb{$fit()} has been run.}
\item{\code{tsMat}}{Input time series matrix.}
\item{\code{n}}{Number of observations.}
\item{\code{p}}{Number of features.}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-fit"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-fit}{}}}
\subsection{Method \code{fit()}}{
Takes a time series matrix as input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$fit(tsMat)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tsMat}}{Numeric matrix. A time series matrix of size \eqn{n \times p} whose rows are observations ordered in time.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Initialises \code{private$.tsMat}, \code{private$.n}, and \code{private$.p}, and sets private$.fitted to TRUE,
enabling the use of \verb{$predict()}. Run \verb{$describe()} for detailed configurations.
}

\subsection{Returns}{
Invisibly returns \code{NULL}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-predict"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-predict}{}}}
\subsection{Method \code{predict()}}{
Performs PELT given a linear penalty value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$predict(pen = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pen}}{Numeric. Penalty per change point. Default: \code{0}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Performs PELT given a linear penalty value. Temporary end points are saved
to \code{private$.tmpEndPoints}, allowing users to use \verb{$plot()} without specifying
end points.
}

\subsection{Returns}{
An integer vector of regime end points. By design, the last element is the
number of observations.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-plot"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-plot}{}}}
\subsection{Method \code{plot()}}{
Plots change point segmentation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$plot(
  d = 1L,
  endPts,
  dimNames,
  main,
  xlab,
  tsWidth = 0.25,
  tsCol = "#5B9BD5",
  bgCol = c("#A3C4F3", "#FBB1BD"),
  bgAlpha = 0.5,
  ncol = 1L
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{d}}{Integer vector. Dimensions to plot. Default: \code{1L}.}

\item{\code{endPts}}{Integer vector. End points; defaults to latest temporary changepoints from \verb{$predict()}.}

\item{\code{dimNames}}{Character vector. Feature names matching length of \code{d}. Defaults to \verb{"X1", "X2", ...}.}

\item{\code{main}}{Character. Main title. Defaults to \code{"PELT: d = ..."}.}

\item{\code{xlab}}{Character. X-axis label. Default: \code{"Time"}.}

\item{\code{tsWidth}}{Numeric. Line width for time series and segments. Default: \code{0.25}.}

\item{\code{tsCol}}{Character. Time series color. Default: \code{"#5B9BD5"}.}

\item{\code{bgCol}}{Character vector. Segment colors, recycled to length of \code{endPts}. Default: \code{c("#A3C4F3", "#FBB1BD")}.}

\item{\code{bgAlpha}}{Numeric. Background transparency. Default: \code{0.5}.}

\item{\code{ncol}}{Integer. Number of columns in facet layout. Default: \code{1L}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Plots change point segmentation results. Based on \code{ggplot2}. Multiple plots can easily be
horizontally and vertically stacked using \code{patchwork}'s operators \code{/} and \code{|}, respectively.
}

\subsection{Returns}{
An object of classes \code{gg} and \code{ggplot}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PELT-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PELT-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PELT$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
